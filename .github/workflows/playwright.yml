# Enhanced GitHub Actions CI/CD Pipeline
name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    timeout-minutes: 60
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        browser: [chromium, firefox, webkit]
        exclude:
          # WebKit is not supported on Windows/Linux for this setup
          - os: windows-latest
            browser: webkit

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}

    - name: Create environment file
      run: |
        echo "BASE_URL=${{ secrets.BASE_URL || 'https://training.bt-ms.com/MAIN-STAGE/erp.php' }}" >> .env
        echo "HEADLESS=true" >> .env
        echo "CI_ENVIRONMENT=true" >> .env
        echo "MAX_WORKERS=2" >> .env
        echo "SCREENSHOT_MODE=only-on-failure" >> .env
        echo "VIDEO_MODE=retain-on-failure" >> .env

    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.browser }}
      env:
        CI: true

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.os }}-${{ matrix.browser }}
        path: |
          reports/
          test-results/
          allure-results/
        retention-days: 30

  report:
    if: always()
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Allure
      run: npm install -g allure-commandline

    - name: Merge Allure results
      run: |
        mkdir -p merged-allure-results
        find . -name "allure-results" -type d -exec cp -r {}/* merged-allure-results/ \; || true

    - name: Generate Allure report
      run: allure generate merged-allure-results --clean -o allure-report

    - name: Setup Pages
      uses: actions/configure-pages@v4
      if: github.ref == 'refs/heads/main'

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      if: github.ref == 'refs/heads/main'
      with:
        path: ./allure-report

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      if: github.ref == 'refs/heads/main'
