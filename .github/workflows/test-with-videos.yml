name: Playwright Tests with Video Recording
on:
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run with video recording'
        required: true
        default: 'smoke'
        type: choice
        options:
        - smoke
        - critical
        - single-test

jobs:
  test-with-videos:
    runs-on: ubuntu-latest
    
    steps:
    - name: ðŸš€ Checkout code
      uses: actions/checkout@v4
    
    - name: ðŸ“¦ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: ðŸ”§ Install dependencies
      run: |
        npm ci
        npx playwright install
    
    - name: ðŸŽ¥ Configure video recording
      run: |
        echo "Enabling video recording for all tests..."
        
    - name: ðŸ§ª Run tests with video recording
      env:
        PLAYWRIGHT_VIDEO: 'on'
        PLAYWRIGHT_SCREENSHOTS: 'on'
      run: |
        case "${{ github.event.inputs.test_suite }}" in
          "smoke")
            npm run test:smoke -- --video=on --screenshot=on
            ;;
          "critical") 
            npm run test:critical -- --video=on --screenshot=on
            ;;
          "single-test")
            npx playwright test login.spec.ts --video=on --screenshot=on --headed
            ;;
        esac
    
    - name: ðŸ“Š Upload video recordings
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-videos-${{ github.event.inputs.test_suite }}
        path: |
          test-results/**/videos/
          test-results/**/screenshots/
          playwright-report/
        retention-days: 7
    
    - name: ðŸ“‹ Video Summary
      if: always()
      run: |
        echo "ðŸ“¹ Video recordings available in artifacts:"
        find test-results -name "*.webm" -type f | head -10
        echo "ðŸ“¸ Screenshots available:"
        find test-results -name "*.png" -type f | head -10
