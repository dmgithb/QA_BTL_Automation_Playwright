name: Playwright Tests with Live Streaming
on:
  workflow_dispatch:
    inputs:
      stream_tests:
        description: 'Enable live streaming of test execution'
        required: false
        default: false
        type: boolean

jobs:
  test-with-streaming:
    runs-on: ubuntu-latest
    if: github.event.inputs.stream_tests == true
    
    steps:
    - name: 🚀 Checkout code
      uses: actions/checkout@v4
    
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: 🎥 Setup streaming environment
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg xvfb
        
        # Setup virtual display
        export DISPLAY=:99
        Xvfb :99 -screen 0 1920x1080x24 &
        sleep 3
        
        # Start screen recording
        ffmpeg -f x11grab -video_size 1920x1080 -i :99 -codec:v libx264 -r 12 -preset ultrafast -crf 28 test-execution.mp4 &
        
    - name: 🔧 Install dependencies
      run: |
        npm ci
        npx playwright install
    
    - name: 🧪 Run tests with display recording
      env:
        DISPLAY: :99
      run: |
        echo "🎬 Starting test execution with screen recording..."
        timeout 300s npm run test:smoke -- --headed --slowMo=1000 || true
        
    - name: 🎬 Finalize recording
      if: always()
      run: |
        # Stop recording
        pkill -f ffmpeg || true
        sleep 5
        
        # Check if recording exists
        if [ -f "test-execution.mp4" ]; then
          echo "✅ Recording created successfully"
          ls -lh test-execution.mp4
        else
          echo "❌ Recording failed"
        fi
    
    - name: 📊 Upload execution recording
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-execution-recording
        path: |
          test-execution.mp4
          test-results/
          playwright-report/
