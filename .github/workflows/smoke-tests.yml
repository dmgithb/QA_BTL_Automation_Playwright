# 🚀 Smoke Tests CI/CD Pipeline
name: Smoke Tests

on:
  # Trigger on every push to main/develop
  push:
    branches: [ main, develop ]
  # Trigger on pull requests
  pull_request:
    branches: [ main ]
  # Manual trigger with workflow dispatch
  workflow_dispatch:
    inputs:
      browser:
        description: 'Browser to run tests on'
        required: true
        default: 'chromium'
        type: choice
        options:
          - chromium
          - firefox
          - webkit
          - all
  # Schedule - Run smoke tests every 2 hours during business hours
  schedule:
    - cron: '0 9,11,13,15,17 * * 1-5'  # Every 2 hours, 9 AM to 5 PM, weekdays

jobs:
  smoke-test:
    timeout-minutes: 15  # Smoke tests should be fast
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: ${{ github.event.inputs.browser == 'all' && fromJSON('["chromium", "firefox", "webkit"]') || (github.event.inputs.browser && fromJSON(format('["{0}"]', github.event.inputs.browser)) || fromJSON('["chromium"]')) }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}

    - name: Create environment file
      run: |
        echo "BASE_URL=${{ secrets.BASE_URL || secrets.STAGING_BASE_URL || 'https://your-app-url.com' }}" >> .env
        echo "HEADLESS=true" >> .env
        echo "CI_ENVIRONMENT=true" >> .env
        echo "MAX_WORKERS=2" >> .env
        echo "SCREENSHOT_MODE=only-on-failure" >> .env
        echo "VIDEO_MODE=retain-on-failure" >> .env

    - name: Run Smoke Tests Only
      run: npx playwright test --project=${{ matrix.browser }} --grep "@smoke"
      env:
        # Security: Use GitHub Secrets for credentials
        TEST_USER_USERNAME: ${{ secrets.TEST_USER_USERNAME }}
        TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
        ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
        ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
        MANAGER_USERNAME: ${{ secrets.MANAGER_USERNAME }}
        MANAGER_PASSWORD: ${{ secrets.MANAGER_PASSWORD }}
        REGULAR_USER_USERNAME: ${{ secrets.REGULAR_USER_USERNAME }}
        REGULAR_USER_PASSWORD: ${{ secrets.REGULAR_USER_PASSWORD }}
        CI: true
        ALLURE_RESULTS_DIR: allure-results

    - name: Upload smoke test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: smoke-test-report-${{ matrix.browser }}-${{ github.run_number }}
        path: |
          reports/
          test-results/
          allure-results/
        retention-days: 7  # Keep smoke test reports for 7 days

  smoke-report:
    if: always()
    needs: smoke-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all smoke test artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: smoke-test-report-*
        merge-multiple: true

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Allure
      run: npm install -g allure-commandline

    - name: Merge Allure results
      run: |
        mkdir -p merged-smoke-results
        # Check if any allure-results directories exist
        if find . -name "allure-results" -type d | head -1 | grep -q .; then
          find . -name "allure-results" -type d -exec cp -r {}/* merged-smoke-results/ \; || true
        else
          echo "No allure-results found, creating empty results"
          mkdir -p merged-smoke-results
          echo '{"uuid":"no-tests","name":"No Tests Found","status":"broken"}' > merged-smoke-results/no-tests.json
        fi

    - name: Generate Smoke Test Report
      run: |
        allure generate merged-smoke-results --clean -o smoke-allure-report
        # Add smoke test identifier to the report
        echo "<!-- SMOKE TEST REPORT -->" >> smoke-allure-report/index.html

    - name: Setup Pages (for smoke reports)
      uses: actions/configure-pages@v4
      if: github.ref == 'refs/heads/main'
      continue-on-error: true

    - name: Upload Smoke Report to Pages
      uses: actions/upload-pages-artifact@v3
      if: github.ref == 'refs/heads/main'
      continue-on-error: true
      with:
        path: ./smoke-allure-report

    - name: Deploy Smoke Reports to GitHub Pages
      id: smoke-deployment
      uses: actions/deploy-pages@v4
      if: github.ref == 'refs/heads/main'
      continue-on-error: true

    - name: Notify Smoke Test Results
      if: always()
      run: |
        if [ "${{ needs.smoke-test.result }}" == "success" ]; then
          echo "✅ Smoke tests passed! All critical functionality is working."
          echo "🎯 GitHub Pages deployed successfully"
        else
          echo "❌ Smoke tests failed! Critical issues detected."
          echo "📊 Check artifacts for detailed failure information."
          echo "::warning::Smoke tests failed - check the detailed report in artifacts"
        fi
