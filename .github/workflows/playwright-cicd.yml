name: Playwright Tests CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    name: Run Playwright Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        test-suite: [critical, smoke, regression]
        
    steps:
    - name: 🚀 Checkout repository
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🎭 Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: 🔧 Create environment file
      run: |
        echo "TEST_USER_USERNAME=${{ secrets.TEST_USER_USERNAME }}" >> .env
        echo "TEST_USER_PASSWORD=${{ secrets.TEST_USER_PASSWORD }}" >> .env
        echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
        echo "DEFAULT_EMAIL_DOMAIN=digitalmesh.com" >> .env
        echo "NODE_ENV=test" >> .env
        echo "HEADLESS=true" >> .env
        echo "CI_ENVIRONMENT=true" >> .env

    - name: 🛡️ Validate environment configuration
      run: npm run test:config-validation

    - name: 🧪 Run ${{ matrix.test-suite }} tests
      run: npm run test:${{ matrix.test-suite }}
      continue-on-error: true

    - name: 📊 Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.test-suite }}
        path: |
          playwright-report/
          test-results/
          reports/
        retention-days: 30

    - name: 📋 Upload test summary
      if: always()
      run: |
        echo "## 🎭 Playwright Test Results - ${{ matrix.test-suite }}" >> $GITHUB_STEP_SUMMARY
        echo "### Test Suite: ${{ matrix.test-suite }}" >> $GITHUB_STEP_SUMMARY
        if [ -f reports/test-results.json ]; then
          echo "Test results available in artifacts" >> $GITHUB_STEP_SUMMARY
        else
          echo "No test results found" >> $GITHUB_STEP_SUMMARY
        fi

  security-check:
    name: Security Validation
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 🚀 Checkout repository
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📦 Install dependencies
      run: npm ci

    - name: 🔧 Create environment file
      run: |
        echo "TEST_USER_USERNAME=${{ secrets.TEST_USER_USERNAME }}" >> .env
        echo "TEST_USER_PASSWORD=${{ secrets.TEST_USER_PASSWORD }}" >> .env
        echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
        echo "DEFAULT_EMAIL_DOMAIN=digitalmesh.com" >> .env

    - name: 🛡️ Run security validation tests
      run: npm run test -- tests/security-validation.spec.ts

  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test, security-check]
    if: always()
    
    steps:
    - name: 📬 Create success notification
      if: needs.test.result == 'success' && needs.security-check.result == 'success'
      run: |
        echo "✅ All tests passed successfully!" >> $GITHUB_STEP_SUMMARY
        echo "- Critical tests: ✅ Passed" >> $GITHUB_STEP_SUMMARY
        echo "- Smoke tests: ✅ Passed" >> $GITHUB_STEP_SUMMARY  
        echo "- Regression tests: ✅ Passed" >> $GITHUB_STEP_SUMMARY
        echo "- Security validation: ✅ Passed" >> $GITHUB_STEP_SUMMARY

    - name: 📬 Create failure notification
      if: needs.test.result == 'failure' || needs.security-check.result == 'failure'
      run: |
        echo "❌ Some tests failed!" >> $GITHUB_STEP_SUMMARY
        echo "Please check the test artifacts for details." >> $GITHUB_STEP_SUMMARY
